[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4492300,
              "status": "passed"
            },
            "match": {
              "location": "WikiSteps.myBeforeStep()"
            }
          },
          {
            "result": {
              "duration": 6662800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.InitializeTest()"
            }
          },
          {
            "result": {
              "duration": 9232100,
              "status": "passed"
            },
            "match": {
              "location": "WhenSteps.myBeforeStep()"
            }
          }
        ],
        "line": 19,
        "name": "Making a basic rest API call using examples",
        "description": "",
        "id": "rest-assured-feature;making-a-basic-rest-api-call-using-examples",
        "after": [
          {
            "result": {
              "duration": 452800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.addData(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 386211700,
              "status": "passed"
            },
            "line": 20,
            "name": "a user spcifies query parameters:",
            "match": {
              "location": "WhenSteps.aUserSpcifiesQueryParameters(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "queryParam",
                  "queryParamValue"
                ],
                "line": 21
              },
              {
                "cells": [
                  "param2",
                  "value2"
                ],
                "line": 22
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11922400,
              "status": "passed"
            },
            "line": 23,
            "name": "I submit dynamic headers",
            "match": {
              "location": "WhenSteps.iSubmitDynamicHeaders(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "headerType",
                  "headerValue"
                ],
                "line": 24
              },
              {
                "cells": [
                  "header2",
                  "headerval2"
                ],
                "line": 25
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 801058500,
              "status": "passed"
            },
            "line": 27,
            "name": "I make a request to this url: \u0027https://reqres.in/api/unknown\u0027",
            "match": {
              "arguments": [
                {
                  "val": "https://reqres.in/api/unknown",
                  "offset": 31
                }
              ],
              "location": "WhenSteps.iMakeARequestToThisUrlUrl(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44425700,
              "status": "passed"
            },
            "output": [
              "\nAPi Request\nRequest method: GET\nRequest URI: https://reqres.in/api/unknown\nForm Params: {}\nRequest Param: {}\nHeaders: headerType\u003dheaderValue\nheader2\u003dheaderval2\nAccept\u003d*/*\nCookies: \nProxy: null\nBody: null\n******************************\nAPi Response\n\n\nStatus Code: 200\nStatus Line: HTTP/1.1 200 OK\nResponse Cookies: __cfduid\u003ddf20a31b9639c4b2ab1c6602d4437ac011594741980;Path\u003d/;Domain\u003d.reqres.in;Secure;HttpOnly;Expires\u003d13/08/20 15:53\nResponse Content Type: application/json; charset\u003dutf-8\nResponse Headers: Date\u003dTue, 14 Jul 2020 15:53:00 GMT\nContent-Type\u003dapplication/json; charset\u003dutf-8\nTransfer-Encoding\u003dchunked\nConnection\u003dkeep-alive\nSet-Cookie\u003d__cfduid\u003ddf20a31b9639c4b2ab1c6602d4437ac011594741980; expires\u003dThu, 13-Aug-20 15:53:00 GMT; path\u003d/; domain\u003d.reqres.in; HttpOnly; SameSite\u003dLax; Secure\nX-Powered-By\u003dExpress\nAccess-Control-Allow-Origin\u003d*\nEtag\u003dW/\"301-ijGNEim/mAI7LpbQIXyQc2bjt+k\"\nVia\u003d1.1 vegur\nCache-Control\u003dmax-age\u003d14400\nCF-Cache-Status\u003dHIT\nAge\u003d1363\ncf-request-id\u003d03efa095b60000f3dfe3995200000001\nExpect-CT\u003dmax-age\u003d604800, report-uri\u003d\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\nVary\u003dAccept-Encoding\nServer\u003dcloudflare\nCF-RAY\u003d5b2c6a02b8c8f3df-LHR\nContent-Encoding\u003dgzip\nResponse Body: \n{\n    \"page\": 1,\n    \"per_page\": 6,\n    \"total\": 12,\n    \"total_pages\": 2,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"cerulean\",\n            \"year\": 2000,\n            \"color\": \"#98B2D1\",\n            \"pantone_value\": \"15-4020\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"fuchsia rose\",\n            \"year\": 2001,\n            \"color\": \"#C74375\",\n            \"pantone_value\": \"17-2031\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"true red\",\n            \"year\": 2002,\n            \"color\": \"#BF1932\",\n            \"pantone_value\": \"19-1664\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"aqua sky\",\n            \"year\": 2003,\n            \"color\": \"#7BC4C4\",\n            \"pantone_value\": \"14-4811\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"tigerlily\",\n            \"year\": 2004,\n            \"color\": \"#E2583E\",\n            \"pantone_value\": \"17-1456\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"blue turquoise\",\n            \"year\": 2005,\n            \"color\": \"#53B0AE\",\n            \"pantone_value\": \"15-5217\"\n        }\n    ],\n    \"ad\": {\n        \"company\": \"StatusCode Weekly\",\n        \"url\": \"http://statuscode.org/\",\n        \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"\n    }\n}"
            ],
            "line": 28,
            "name": "I get a \u0027200\u0027 response code returned",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 9
                }
              ],
              "location": "ThenSteps.iGetAResponseCodeStringReturned(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@restassured"
          },
          {
            "line": 18,
            "name": "@rest-ts002"
          }
        ]
      }
    ],
    "name": "rest assured feature",
    "description": "",
    "id": "rest-assured-feature",
    "keyword": "Feature",
    "uri": "restAssured.feature"
  }
]